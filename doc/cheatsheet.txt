*cheatsheet.txt*   Cheat sheet for key strokes etc.

Interesting commands in NORMAL mode:
 * ga Get Unicode point (HEX etc.)
 * g8 Get Binary data HEX sequence
 * ^G Get cursor Position
 * {visual}g? ROT13

GNOME:
  * CapL  as <ESC> via GNOME-Tweak

NORMAL MODE:
  * KB MACRO: (All key strokes happen in NORMAL mode) -- Local trick
    * “qq” to start recording MACRO
    * “q”  to quit  recording MACRO
    * “Q”  to apply           MACRO
  * <LEADER>=<SPACE>
    * <LEADER>p           map to toggle paste
    * <LEADER>w           map to winmanager
    * <LEADER>b           map to bufferexplorer
    * <LEADER>e           map to StripWhitespace at EOL

TERMINAL-NORMAL MODE:
 * Esc Esc    Sure NORMAL MODE (map for CTRL-\ CTRL-N except fzf)

INSERT MODE
  * F1:  Help
  * F2-F5: MACRO use (map for @2-@5?)
  * F6:  ひらがな
  * F7:  カタカナ
  * F8:  半角英数ｶﾅ
  * F9:  全角英数字   Shift-F9: 半角英数字 (F10 alternative)
  * F10: 半角英数字
  * Shift-Space ローマ字かな入力  （変換キー同様）
  * Ctrl-Space  英数ダイレクト入力（無変換キー同様）

>
  CONTROL codes: (avoid reassign, use <LEADER> in NORMAL)
            Shell        _______VIM_______   ___________
            Emacs        COMMAND   REPLACE   Use this in
                         TERMINAL  INSERT    NORMAL
  <C-H>    <BS>          Yes       Yes       hx  or  hc
  <C-D>    <Del>        *Yes      %Yes       x   or  c
  <C-B>    <Left>       *Yes      %Yes       h
  <C-F>    <Right>      *Yes      %Yes       l
  <C-A>    <Home>       %Yes      ?No                I
  <C-E>    <End>        %Yes      ?No                A
  <C-P>    <Up>         %Yes      ?No        k
  <C-N>    <Down>       %Yes      ?No        j
  <C-W>    Erase_word    Yes       Yes       diw or  ciw
  <C-U>    Rubout        Yes       Yes       d0  or  c0
  <Esc>                  NORMAL    NORMAL    NORMAL
  <C-R>    (history)     ----      Ins_reg   Redo
<
  * Register: '/' search pattern, '"' delete or yank
  * User mapping: *Yes=must, %Yes=maybe, ?No=maybe_no
------------------------------------------------------------------------------
Keyboard usage hints (NORMAL MODE)
>
 NORMAL MODE:        Goto BOF → gg      r Next Char
 screen                   n N # ?ααα   e / +-- End of Word (non-alnum)
 scroll        ai+wW({[<sp"'`↓  ^b    t / / +- Word Next (non-alnum)
 ↓     Change c{motion} cc  c↑  ^u   n / / / + End of Word (space)
 ↓     Delete d{motion} dd  d↑  H   e / / / / +Word Next (space)
 +--+  Copy   y{motion} yy  y↑  {  C / / / / / +Till α, x  Delete char
 |zt|  Put After/Before p / P   ( / / / / / / / Find α, r  Replace char
 |^e|  "α  Use α as register    k/ / / / / / /  /  EOL, ~  Change case
 |zz|     0 ^ Fα Tα gE B ge b h M l e w E W tα fα $    gd  Goto definiton
 |^y| ↓↓↓ Split Window ↓↓↓      j ---- Line            ^]  Tag jump
 |zb| ^W + ncsvhjkl=+-_<>|      ) ---- Sentence        ^t  Tag jump-back
 +--+ Join lines       J        } ---- Paragraph       ^o  Jump back
      Forward Backward Search   L ---- Bottom of Page  {visual}>  Indent →
      n N /ααα ?ααα - Find ααα  ^d --- Prev 1/2 Page   {visual}<  Indent ←
      n N *    # ---- Indicator ^f --- Next Page       {visual}=  Indent ⇆
      , ; tα   Tα --- Till α    /ααα - Find ααα * n N  {visual}gq Format Text
      , ; fα   Fα --- Find α    G ---- Goto EOF        α=β for reformat α→β
   Next Prev   %  --- Match     [{ ]} [[ ]] [] ][ Look for {}
 Record: qα, End-Record: q, Play-Record: @α, Mark as α: mα, Jump to α: `α/'α
 Undo: u, Redo: ^r, Repeat: . , Fold: Open zo/zO/zr/zR, Close zc/zC/zm/zM
 Insert Mode: i/a Before/After Char, I/A Before/After Line, O/o above/below
 Visual Mode: v Char V Line ^V Block, Replace Mode: R, Normal mode: <ESC>
<

How to remember odd screen scroll keys (NORMAL):
 * ^b: Backward page
 * ^u: Upward 1/2 page
 * ^y: expose up 1 line == Yester(day)-line, next to ^u (Keep cursor)
 * ^f: Forward  page
 * ^d: Downward 1/2 page
 * ^e: Expose down 1 line, next to ^d (Keep cursor)

Ex Mode commands:
>
:e φφφ :enew :w φφφ :wall :wq :q! :%s/ααα/βββ/gc :ls :bn :bp :bd :!
:vsp :sp :diffs :n :vim :make :cf :term
<
_____________________________________________________________________________

>
 Visual-block mode: :set virtualedit=block   or use $ at the widest line
 Ascii art          :set virtualedit=all
<
_____________________________________________________________________________


Things to learn

>
 ` # $ % ^ * ( ) 0 _ - + w W e E t T I o O
 { } [[ [] ][ ]] [m [M ]m ]M [( ]) [{ ]} |
 A f F ge gE gg G g0 gm g^ g$ g_ g, g; gj gk gI h H j k l L ; '
 z. z z- zz zt zb b B n N M , / ? -
<

>
 vimgrep make ...
<
_____________________________________________________________________________
US vs. JP keyboard

>
        US Keyboard                     JA Keyboard
        ←←←←←→→→→→ XXX                  ←←←←←→→→→→ XXX
        5432222345 555                  5432222345 555

   ~    !@#$%^&*() _+             H/Z   !"#$%&'()  =~|
   `    1234567890 -=   BS        KAN   1234567890 -^¥   BS

        ↑↑↑↑↑↑↑↑↑↑ {}   |               ↑↑↑↑↑↑↑↑↑↑ `{    E
  TAB   qwertyuiop []   \         TAB   qwertyuiop @[    n
                                                         t
        ↑↑↑↑↑↑↑↑↑: "              CapL  ↑↑↑↑↑↑↑↑↑+ *}    e
  CapL  asdfghjkl; '  Enter       Eisu  asdfghjkl; :]    r

        ↑↑↑↑↑↑↑<>?                      ↑↑↑↑↑↑↑<>? _
  Sift  zxcvbnm,./    Shift       Sift  zxcvbnm,./ \   Shift
<
_____________________________________________________________________________
" vim:set sts=2 sw=2 ai si et tw=78:
